<launch>
  <arg name="image" default="tello/image_raw" doc="The image topic. Should be remapped to the name of the real image topic." />

  <arg name="use_camera_info" default="false" doc="Indicates that the camera_info topic should be subscribed to to get the default input_frame_id. Otherwise the frame from the image message will be used." />
  <arg name="debug_view" default="true" doc="Specify whether the node displays a window to show image" />
  <arg name="queue_size" default="3" doc="Specigy queue_size of input image subscribers" />

  <arg name="threshold" default="100" doc="Treshold for the detecting edges."/>

  <!-- color_filter.cpp  -->
  <node name="blue_color" pkg="opencv_apps" type="hsv_color_filter" output="screen">
    <remap from="image" to="$(arg image)" />
    
    <param name="use_camera_info" value="$(arg use_camera_info)" />
    <param name="debug_view" value="$(arg debug_view)" />
    <param name="queue_size" value="$(arg queue_size)" />
    <param name="h_limit_max" value="254" />
    <param name="h_limit_min" value="194" />
    <param name="s_limit_max" value="149" />
    <param name="s_limit_min" value="238" />
    <param name="v_limit_max" value="256" />
    <param name="v_limit_min" value="96" />
  </node>
  <node name="green_color" pkg="opencv_apps" type="hsv_color_filter" output="screen">
    <remap from="image" to="$(arg image)" />
    <param name="use_camera_info" value="$(arg use_camera_info)" />
    <param name="debug_view" value="$(arg debug_view)" />
    <param name="queue_size" value="$(arg queue_size)" />
    <param name="h_limit_max" value="180" />
    <param name="h_limit_min" value="70" />
    <param name="s_limit_max" value="255" />
    <param name="s_limit_min" value="100" />
    <param name="v_limit_max" value="256" />
    <param name="v_limit_min" value="20" />
  </node>
  <node name="yellow_color" pkg="opencv_apps" type="hsv_color_filter" output="screen">
    <remap from="image" to="$(arg image)" />
    <param name="use_camera_info" value="$(arg use_camera_info)" />
    <param name="debug_view" value="$(arg debug_view)" />
    <param name="queue_size" value="$(arg queue_size)" />
    <param name="h_limit_max" value="69" />
    <param name="h_limit_min" value="47" />
    <param name="s_limit_max" value="255" />
    <param name="s_limit_min" value="100" />
    <param name="v_limit_max" value="255" />
    <param name="v_limit_min" value="142" />
  </node>

  <node name="green_conter" pkg="opencv_apps" type="general_contours" >
    <remap from="image" to="green_color/image" />
    <param name="use_camera_info" value="$(arg use_camera_info)" />
    <param name="debug_view" value="$(arg debug_view)" />
    <param name="queue_size" value="$(arg queue_size)" />
    <param name="threshold" value="$(arg threshold)" />
  </node>
  <node name="blue_conter" pkg="opencv_apps" type="general_contours" >
    <remap from="image" to="blue_color/image" />
    <param name="use_camera_info" value="$(arg use_camera_info)" />
    <param name="debug_view" value="$(arg debug_view)" />
    <param name="queue_size" value="$(arg queue_size)" />
    <param name="threshold" value="$(arg threshold)" />
  </node>
  <node name="yellow_conter" pkg="opencv_apps" type="general_contours" >
    <remap from="image" to="yellow_color/image" />
    <param name="use_camera_info" value="$(arg use_camera_info)" />
    <param name="debug_view" value="$(arg debug_view)" />
    <param name="queue_size" value="$(arg queue_size)" />
    <param name="threshold" value="$(arg threshold)" />
  </node>

  <!-- <node name="edgetpu_face_detector"
        pkg="coral_usb" type="edgetpu_face_detector.py"
        output="screen" respawn="true">
    <remap from="~input" to="$(arg use_camera_info)" />
    <rosparam subst_value="true" >
      model_file: "$(find coral_usb)/models/mobilenet_ssd_v2_face_quant_postprocess_edgetpu.tflite"
      image_transport: "raw"
      device_id: "0"
    </rosparam>
  </node> -->

</launch>
